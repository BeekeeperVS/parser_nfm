version: '3.2'
services:
  mysql_db:
    build: ./docker/database/mysql
    container_name: nfm_mysql_db
    command: --default-authentication-plugin=mysql_native_password
#    command: [ mysqld, --default-authentication-plugin=mysql_native_password, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --innodb_monitor_enable=all, --max-connections=1001 ]
    ports:
      - 3306:3306
    restart: unless-stopped
    volumes:
      - ./database/mysql:/var/lib/mysql
#      - ./docker/mysql/dumps:/dumps
#      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_HOST: "%"
    networks:
      nfm-network:

  phpmyadmin:
    build: ./docker/database/phpmyadmin
    container_name: nfm_phpmyadmin
    depends_on:
      - mysql_db
    restart: always
    ports:
      - '8060:80'
    environment:
      PMA_HOST: mysql_db
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    networks:
      nfm-network:

  backend:
    build: ./docker/backend
    container_name: nfm_backend
    environment:
      - APACHE_RUN_USER=#1000
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./backend:/app:delegated
      - ./docker/backend/apache.ports.conf:/etc/apache2/ports.conf
      - ./docker/backend/apache.default.conf:/etc/apache2/sites-available/000-default.conf
    ports:
      - '8001:8001'
#    depends_on:
#      - mysql_db
    networks:
      nfm-network:

  api_parser:
    build:
      context: ./
      dockerfile: ./docker/apiParser/Dockerfile
    container_name: nfm_api_parser
    restart: always
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - HOST=lotparser.w8shipping.ua
    volumes:
      - ./api_parser:/app:delegated
    networks:
      nfm-network:

  nginx:
    build: ./docker/nginx
    container_name: nfm_nginx
    restart: unless-stopped
    volumes:
      - ./docker/nginx/nginx.local.conf:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - backend
      - mysql_db
      - api_parser
    networks:
      nfm-network:
    ports:
      - 80:80

networks:
  nfm-network:
    driver: bridge

volumes:
  dbdata:
    driver: local